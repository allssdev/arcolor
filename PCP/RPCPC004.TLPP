#include "Totvs.ch"
#include "tlpp-core.th"
#INCLUDE "FWPrintSetup.ch"
#Include "RPTDef.ch"

/*/{Protheus.doc} className
    Classe para geração do Reletório de Alteração de Empenho Multiplo.
    @author Fernando Bombardi
    @since 06/12/2023
    /*/
Class RPCPC004

    Public Method New() CONSTRUCTOR
    Public Method imprimirRelatorioDeAlteracaoDeEmpenho()
    Private Method ImprimirCabecalho()
    Private Method imprimirRodape()

EndClass

/*/{Protheus.doc} New
    Metodo construtor da classe.
    @author Fernando Bombardi
    @since 06/12/2023
    /*/
Method New() class RPCPC004
Return

/*/{Protheus.doc} imprimirRelatorioDeAlteracaoDeEmpenho
    Metodo para realizar a impressão do ajuste de empenho.
    @author Fernando Bombardi   
    @since 06/12/2023
    /*/
Method imprimirRelatorioDeAlteracaoDeEmpenho()  class RPCPC004
	Local _cArq            := "REGISTRO_DE_ALTERACAO_DE_EMPENHO_-_OP_" + Alltrim(cOP) + "_" + DtoS(dDataBase) + StrTran(Time(),":","") + ".PDF"
	//Local nUsaPDF          := IMP_PDF
	Local lFormaTMSPrinter := .T.
    Local _nItemEmpenho    := 0
	Private _nPagina       := 1
	private _aDevice       := {}
	private _cDevice
	private _nPrtType      := 2

	oProfile               := FWProfile():New()
	oProfile:SetTask('PRINTTYPE')
	AADD(_aDevice,"DISCO") // 1
	AADD(_aDevice,"SPOOL") // 2
	AADD(_aDevice,"EMAIL") // 3
	AADD(_aDevice,"EXCEL") // 4
	AADD(_aDevice,"HTML" ) // 5
	AADD(_aDevice,"PDF"  ) // 6
	_cDevice                    := oProfile:LoadStrProfile()
	_nPrtType                   := aScan(_aDevice,{|x| x == _cDevice})
	if _nPrtType == 0
		_nPrtType        	    := 2
	endif
	oPrn              			:= FWMSPrinter():New(_cArq,_nPrtType,lFormaTMSPrinter,,.F.,.F.,,"",.F.,.T.,.F.,.T.)
	if oPrn:nModalResult == 2
		return .F.
	endif
	oPrn:nQtdCopies             := 1
	oPrn:SetParm("-RFS")
	//oPrn:SetResolution(72)
	oPrn:SetPortrait()
	oPrn:SetPaperSize(DMPAPER_A4)
	oPrn:SetMargin(10,10,10,10)
	oPrn:SetViewPDF(.T.)
	
	//Private oPrn           := FWMSPrinter():New(_cArq,nUsaPDF,lFormaTMSPrinter,,.T.,.F.,,"",.F.,.T.,.F.,.T.)
	Private oFont06        := TFont():New( "Arial",,06,,.F.,,,,.F.,.F. )
	Private oFont07        := TFont():New( "Arial",,07,,.F.,,,,.F.,.F. )
	Private oFont08        := TFont():New( "Arial",,08,,.F.,,,,.F.,.F. )
	Private oFont09        := TFont():New( "Arial",,09,,.F.,,,,.F.,.F. )
	Private oFont10        := TFont():New( "Arial",,10,,.F.,,,,.F.,.F. )
	Private oFont11        := TFont():New( "Arial",,11,,.F.,,,,.F.,.F. )
	Private oFont12        := TFont():New( "Arial",,12,,.F.,,,,.F.,.F. )
	Private oFont13        := TFont():New( "Arial",,13,,.F.,,,,.F.,.F. )
	Private oFont14        := TFont():New( "Arial",,14,,.F.,,,,.F.,.F. )
	Private oFont15        := TFont():New( "Arial",,15,,.F.,,,,.F.,.F. )
	Private oFont16        := TFont():New( "Arial",,16,,.F.,,,,.F.,.F. )
	Private oFont17        := TFont():New( "Arial",,17,,.F.,,,,.F.,.F. )
	Private oFont18        := TFont():New( "Arial",,18,,.F.,,,,.F.,.F. )
	Private oFont19        := TFont():New( "Arial",,19,,.F.,,,,.F.,.F. )
	Private oFont20        := TFont():New( "Arial",,20,,.F.,,,,.F.,.F. )
	Private oFont24        := TFont():New( "Arial",,24,,.F.,,,,.F.,.F. )

	Private oFont06N       := TFont():New( "Arial",,06,,.T.,,,,.F.,.F. )
	Private oFont07N       := TFont():New( "Arial",,07,,.T.,,,,.F.,.F. )
	Private oFont08N       := TFont():New( "Arial",,08,,.T.,,,,.F.,.F. )
	Private oFont09N       := TFont():New( "Arial",,09,,.T.,,,,.F.,.F. )
	Private oFont10N       := TFont():New( "Arial",,10,,.T.,,,,.F.,.F. )
	Private oFont11N       := TFont():New( "Arial",,11,,.T.,,,,.F.,.F. )
	Private oFont12N       := TFont():New( "Arial",,12,,.T.,,,,.F.,.F. )
	Private oFont13N       := TFont():New( "Arial",,13,,.T.,,,,.F.,.F. )
	Private oFont14N       := TFont():New( "Arial",,14,,.T.,,,,.F.,.F. )
	Private oFont15N       := TFont():New( "Arial",,15,,.T.,,,,.F.,.F. )
	Private oFont16N       := TFont():New( "Arial",,16,,.T.,,,,.F.,.F. )
	Private oFont17N       := TFont():New( "Arial",,17,,.T.,,,,.F.,.F. )
	Private oFont18N       := TFont():New( "Arial",,18,,.T.,,,,.F.,.F. )
	Private oFont19N       := TFont():New( "Arial",,19,,.T.,,,,.F.,.F. )
	Private oFont20N       := TFont():New( "Arial",,20,,.T.,,,,.F.,.F. )
	Private oFont24N       := TFont():New( "Arial",,24,,.T.,,,,.F.,.F. )
	/*
	oPrn := FWMSPrinter():New(_cArq,nUsaPDF,lFormaTMSPrinter,,.T.,.F.,,"",.F.,.T.,.F.,.T.)
	oPrn:SetPortrait()
    oPrn:SetPaperSize(DMPAPER_A4)
	oPrn:cPathPDF := GetTempPath()
	*/
	
	_nlinMax	:= 2700
	_nLin       := 0

	oPrn:StartPage()
	::ImprimirCabecalho()
	_nUltPos := len(aColsOri)
	For _nItemEmpenho :=1 to Len(aCols)
        if (_nLin + 50) >= _nlinMax
            ::imprimirRodape()
            oPrn:EndPage()
            ::ImprimirCabecalho()
        endif
		
		_cCod 	  := aCols[_nItemEmpenho,nPosCod]
		_cLoteCtl := aCols[_nItemEmpenho,nPosLotCtl]
		_cLoteAnt := IIF(_nUltPos >= _nItemEmpenho,aColsOri[_nItemEmpenho,nPosLotCtl],"")
	
		BeginSql alias 'SD4TMP'
			SELECT
				D4_QUANT, D4_LOTECTL
			FROM
				%table:SD4% SD4
			WHERE
				SD4.D4_FILIAL= %xfilial:SD4% AND
				SD4.D4_COD = %exp:_cCod% AND
				SD4.D4_LOTECTL =  %exp:_cLoteCtl% AND
				SD4.D4_OP =   %exp:cOP% AND
				SD4.%notDel%
		EndSql	
		if SD4TMP->(!EOF())
			if aCols[_nItemEmpenho,nPosQuant] <> SD4TMP->D4_QUANT
				oPrn:Say(_nLin, 0050, _cCod, oFont12 , 80,,,1)
				oPrn:Say(_nLin, 0290, Substr(aCols[_nItemEmpenho,2],1,45), oFont12 , 80,,,1)
				oPrn:Say(_nLin, 1170, SD4TMP->D4_LOTECTL , oFont12 , 80,,,1)
				oPrn:Say(_nLin, 1520, SD4TMP->D4_LOTECTL, oFont12 , 80,,,1)
				oPrn:Say(_nLin, 1890, Transform(aCols[_nItemEmpenho,nPosQuant], "@E 999,999,999.999999") , oFont12 , 80,,,1)
				 _nLin += 50
			endif
		else
			oPrn:Say(_nLin, 0050, _cCod       , oFont12 , 80,,,1)
			oPrn:Say(_nLin, 0290, Substr(aCols[_nItemEmpenho,2],1,45), oFont12 , 80,,,1)
			oPrn:Say(_nLin, 1190, _cLoteAnt, oFont12 , 80,,,1)
			oPrn:Say(_nLin, 1540, aCols[_nItemEmpenho,nPosLotCtl]    , oFont12 , 80,,,1)
			oPrn:Say(_nLin, 1890, Transform(aCols[_nItemEmpenho,nPosQuant], "@E 999,999,999.999999") , oFont12 , 80,,,1)
 			_nLin += 50

		endif
		SD4TMP->(dbCloseArea())
	Next

    ::imprimirRodape()

	oPrn:EndPage()
	oPrn:Preview()

	FreeObj(oPrn)


return

/*/{Protheus.doc} methodName
    Metodo para imprimir o cabeçalho do relatótio.
    @author Fernando Bombardi
    @since 06/12/2023
    /*/
Method ImprimirCabecalho() class RPCPC004
Local _aArea := GetArea() as array

	oPrn:Say(130, 350,"REGISTRO DE ALTERAÇÃO DE EMPENHO" , oFont24N , 100,,,1)

	oPrn:Say(250, 0050,"Ordem de Produção: ", oFont18 , 100,,,1)
	oPrn:Say(250, 0600,cOP , oFont20N , 100,,,1)

	oPrn:Say(310, 0050, "Produto processado: ", oFont18 , 100,,,1)
    _cCodigoProduto    := Posicione("SC2",1,FWXFilial("SC2")+cOP,"C2_PRODUTO")
    _cDescricaoProduto := Posicione("SB1",1,FWXFilial("SB1")+_cCodigoProduto,"B1_DESC")
	oPrn:Say(310, 0600, Alltrim(_cCodigoProduto) + " - " + _cDescricaoProduto, oFont20N , 100,,,1)

	oPrn:Say(380, 0050, "Emissão em: ", oFont17 , 100,,,1)
	oPrn:Say(430, 0050, DtoC(SC2->C2_EMISSAO) , oFont18N , 100,,,1)

	oPrn:Say(380, 950, "Previsão inicial: ", oFont17 , 100,,,1)
	oPrn:Say(430, 950, DtoC(SC2->C2_DATPRI) , oFont18N , 100,,,1)

	oPrn:Say(380, 1890, "Entrega: ", oFont17 , 100,,,1)
	oPrn:Say(430, 1890, DtoC(SC2->C2_DATPRF) , oFont18N , 100,,,1)

	oPrn:Say(500, 0040, "Centro de Custo: ", oFont18 , 100,,,1)
	oPrn:Say(500, 0570, Alltrim(SC2->C2_CC) +  " - " + Posicione("CTT",1,FWXFilial("CTT")+SC2->C2_CC,"CTT_DESC01") , oFont17N , 100,,,1)

	oPrn:Say(640, 270,"ALTERAÇÕES REALIZADAS NO PROCESSO" , oFont24N , 100,,,1)

	oPrn:Say(750, 0050, "Código"       , oFont15N , 80,,,1)
	oPrn:Say(750, 0290, "Descrição"    , oFont15N , 80,,,1)
	oPrn:Say(750, 1190, "Lote Original", oFont15N , 80,,,1)
	oPrn:Say(750, 1540, "Lote Alterado", oFont15N , 80,,,1)
	oPrn:Say(750, 1890, "Qtde Alterada", oFont15N , 80,,,1)

    _nLin := 800

RestArea(_aArea)
return

/*/{Protheus.doc} imprimirRodape
	Metodo para realizar a impressão do roda pé da pagina.
	@author Fernando Bombardi
	@since 06/12/2023
	/*/
Method imprimirRodape() class RPCPC004
Local _cSaltoLinha := 100 as integer

	oPrn:Say(_nlinMax + _cSaltoLinha     , 0040, "Alterado por: ", oFont17N, 100,,,1)
	//oPrn:Say(_nlinMax + _cSaltoLinha     , 0540, AllTrim(RetCodUsr()) + " - " + UsrFullName(RetCodUsr()), oFont17, 100,,,1)
	oPrn:Say(_nlinMax + _cSaltoLinha     , 0540, AllTrim(UsrRetName(RetCodUsr())) + " - " + AllTrim(UsrFullName(RetCodUsr())), oFont17, 100,,,1)
    _nLinhaDiv := (_nlinMax + _cSaltoLinha + 30)
	oPrn:Line(_nLinhaDiv, 040,_nLinhaDiv ,1350)

	oPrn:Say(_nlinMax + _cSaltoLinha + 120, 0040, "Data de Alteração: ", oFont17N, 100,,,1)
	oPrn:Say(_nlinMax + _cSaltoLinha + 120, 0540, DtoC(Date()) , oFont17, 100,,,1)
	oPrn:Say(_nlinMax + _cSaltoLinha + 120, 0890, "Hora: ", oFont17N, 100,,,1)
	oPrn:Say(_nlinMax + _cSaltoLinha + 120, 1100, Time(), oFont17, 100,,,1)
    _nLinhaDiv := (_nlinMax + _cSaltoLinha + 125)
	oPrn:Line(_nLinhaDiv, 040,_nLinhaDiv ,1350)

Return
